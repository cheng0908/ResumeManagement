{"version":3,"file":"static/js/444.a6adb6ae.chunk.js","mappings":"8HAAO,MCOP,E,QAJmBA,EAAMC,OAAO,CAC9BC,QDJqB,+B,8JEIvB,SAAeC,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,glBACD,uBCCEC,EAAuB,CAC3B,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACxC,CAAEF,MAAO,YAAaC,WAAY,aAAcC,MAAO,KACvD,CAAEF,MAAO,WAAYC,WAAY,YAAaC,MAAO,KACrD,CAAEF,MAAO,QAASC,WAAY,QAASC,MAAO,KAC9C,CAAEF,MAAO,QAASC,WAAY,QAASC,MAAO,KAC9C,CAAEF,MAAO,cAAeC,WAAY,eAAgBC,MAAO,KAC3D,CACEF,MAAO,YACPC,WAAY,WACZC,MAAO,IACPC,WAAaC,IACXP,EAAAA,EAAAA,KAAA,KAAGQ,KAAM,wDAAwDC,UAC/DT,EAAAA,EAAAA,KAACU,EAAmB,QAuB5B,EAbuBC,IAAoC,IAAnC,KAAEC,GAA2BD,EACnD,OACEX,EAAAA,EAAAA,KAACa,EAAAA,EAAG,CAACC,UAAU,kBAAiBL,UAC9BT,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CACPC,KAAMJ,EACNK,QAASf,EACTgB,SAAWC,GAAQA,EAAIC,GACvBC,UAAW,MAET,ECUV,EAvCmBC,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAuB,KACpDC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,GAC1CG,GAAWC,EAAAA,EAAAA,MAiBjB,OAhBAC,EAAAA,EAAAA,YAAU,KACRH,GAAW,GACXI,EAAAA,EACGC,IAAkB,kBAClBC,MAAMC,IACLV,EAAcU,EAAQtB,MACtBe,GAAW,EAAM,IAElBQ,OAAOC,IACNC,MAAM,SACNC,QAAQC,IAAIH,GACZT,GAAW,EAAM,GACjB,GACH,KAIDa,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,qBAAoBL,SAAA,EACjC+B,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,UAASL,SAAA,EACtBT,EAAAA,EAAAA,KAAA,MAAAS,SAAI,gBACJT,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACC,QAAQ,WAAWC,QAASA,IAAMf,EAAS,mBAAmBnB,UACpET,EAAAA,EAAAA,KAAC4C,EAAAA,EAAG,SAGPlB,GACC1B,EAAAA,EAAAA,KAAC6C,EAAAA,EAAgB,CAACC,KAAM,MACA,IAAtBvB,EAAWwB,QACb/C,EAAAA,EAAAA,KAAA,MAAAS,SAAI,kBAEJT,EAAAA,EAAAA,KAACgD,EAAc,CAACpC,KAAMW,MAEpB,C","sources":["constants/url.constant.ts","helpers/http.module.ts","../node_modules/@mui/icons-material/esm/PictureAsPdfRounded.js","components/candidates/CandidatesGrid.component.tsx","pages/candidates/Candidates.page.tsx"],"sourcesContent":["export const baseUrl = \"https://localhost:7029/api/\";","import axios from \"axios\";\r\nimport { baseUrl } from \"../constants/url.constant\";\r\n\r\nconst httpModule = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\nexport default httpModule;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v1.25c0 .41-.34.75-.75.75s-.75-.34-.75-.75V8c0-.55.45-1 1-1H10c.83 0 1.5.67 1.5 1.5v1zm5 2c0 .83-.67 1.5-1.5 1.5h-2c-.28 0-.5-.22-.5-.5v-5c0-.28.22-.5.5-.5h2c.83 0 1.5.67 1.5 1.5v3zm4-3.75c0 .41-.34.75-.75.75H19v1h.75c.41 0 .75.34.75.75s-.34.75-.75.75H19v1.25c0 .41-.34.75-.75.75s-.75-.34-.75-.75V8c0-.55.45-1 1-1h1.25c.41 0 .75.34.75.75zM9 9.5h1v-1H9v1zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1zm11 5.5h1v-3h-1v3z\"\n}), 'PictureAsPdfRounded');","import { Box } from \"@mui/material\";\r\nimport \"./candidates-grid.scss\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { ICandidate } from \"../../types/global.typing\";\r\nimport { PictureAsPdfRounded } from \"@mui/icons-material\";\r\n\r\nconst column: GridColDef[] = [\r\n  { field: \"id\", headerName: \"ID\", width: 100 },\r\n  { field: \"firstName\", headerName: \"First Name\", width: 120 },\r\n  { field: \"lastName\", headerName: \"Last Name\", width: 120 },\r\n  { field: \"email\", headerName: \"Email\", width: 150 },\r\n  { field: \"phone\", headerName: \"Phone\", width: 150 },\r\n  { field: \"coverLetter\", headerName: \"Cover Letter\", width: 400 },\r\n  {\r\n    field: \"resumeUrl\",\r\n    headerName: \"Download\",\r\n    width: 150,\r\n    renderCell: (params) => (\r\n      <a href={\"${baseUrl}/Candidate/download/${params.row.resumeUrl}\"}>\r\n        <PictureAsPdfRounded />\r\n      </a>\r\n    ),\r\n  },\r\n];\r\n\r\ninterface ICandidateGridProps {\r\n  data: ICandidate[];\r\n}\r\n\r\nconst CandidatesGrid = ({ data }: ICandidateGridProps) => {\r\n  return (\r\n    <Box className=\"candidates-grid\">\r\n      <DataGrid\r\n        rows={data}\r\n        columns={column}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n      ></DataGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CandidatesGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./candidates.scss\";\r\nimport httpModule from \"../../helpers/http.module\";\r\nimport { ICandidate } from \"../../types/global.typing\";\r\nimport { error } from \"console\";\r\nimport { Button, CircularProgress } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport CandidatesGrid from \"../../components/candidates/CandidatesGrid.component\";\r\n\r\nconst Candidates = () => {\r\n  const [candidates, setCandidates] = useState<ICandidate[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const redirect = useNavigate();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    httpModule\r\n      .get<ICandidate[]>(\"/Candidate/Get\")\r\n      .then((reponse) => {\r\n        setCandidates(reponse.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error\");\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n    // console.log(candidates);\r\n  return (\r\n    <div className=\"content candidates\">\r\n      <div className=\"heading\">\r\n        <h2>Candidates</h2>\r\n        <Button variant=\"outlined\" onClick={() => redirect(\"/candidates/add\")}>\r\n          <Add />\r\n        </Button>\r\n      </div>\r\n      {loading ? (\r\n        <CircularProgress size={100} />\r\n      ) : candidates.length === 0 ? (\r\n        <h1>No Candidate</h1>\r\n      ) : (\r\n        <CandidatesGrid data={candidates} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Candidates;\r\n"],"names":["axios","create","baseURL","createSvgIcon","_jsx","d","column","field","headerName","width","renderCell","params","href","children","PictureAsPdfRounded","_ref","data","Box","className","DataGrid","rows","columns","getRowId","row","id","rowHeight","Candidates","candidates","setCandidates","useState","loading","setLoading","redirect","useNavigate","useEffect","httpModule","get","then","reponse","catch","error","alert","console","log","_jsxs","Button","variant","onClick","Add","CircularProgress","size","length","CandidatesGrid"],"sourceRoot":""}