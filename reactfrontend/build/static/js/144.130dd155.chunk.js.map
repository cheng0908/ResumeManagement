{"version":3,"file":"static/js/144.130dd155.chunk.js","mappings":"8HAAO,MCOP,E,QAJmBA,EAAMC,OAAO,CAC9BC,QDJqB,+B,wKEMvB,MAAMC,EAAuB,CAC3B,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACxC,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAC5C,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAC5C,CACEF,MAAO,YACPC,WAAY,eACZC,MAAO,IACPC,WAAaC,GAAWC,IAAOD,EAAOE,IAAIC,WAAWC,OAAO,gBAqBhE,EAbsBC,IAAoC,IAAnC,KAAEC,GAA2BD,EAClD,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,iBAAgBC,UAC7BH,EAAAA,EAAAA,KAACI,EAAAA,GAAQ,CACPC,KAAMN,EACNO,QAASlB,EACTmB,SAAWZ,GAAQA,EAAIa,GACvBC,UAAW,MAET,ECkBV,EAvCkBC,KAChB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAqB,KAChDC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,GAC1CG,GAAWC,EAAAA,EAAAA,MAiBjB,OAhBAC,EAAAA,EAAAA,YAAU,KACRH,GAAW,GACXI,EAAAA,EACGC,IAAgB,gBAChBC,MAAMC,IACLV,EAAaU,EAAQvB,MACrBgB,GAAW,EAAM,IAElBQ,OAAOC,IACNC,MAAM,SACNC,QAAQC,IAAIH,GACZT,GAAW,EAAM,GACjB,GACH,KAIDa,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,oBAAmBC,SAAA,EAChCyB,EAAAA,EAAAA,MAAA,OAAK1B,UAAU,UAASC,SAAA,EACtBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,eACJH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,QAAQ,WAAWC,QAASA,IAAMf,EAAS,kBAAkBb,UACnEH,EAAAA,EAAAA,KAACgC,EAAAA,EAAG,SAGPlB,GACCd,EAAAA,EAAAA,KAACiC,EAAAA,EAAgB,CAACC,KAAM,MACD,IAArBvB,EAAUwB,QACZnC,EAAAA,EAAAA,KAAA,MAAAG,SAAI,gBAEJH,EAAAA,EAAAA,KAACoC,EAAa,CAACrC,KAAMY,MAEnB,C","sources":["constants/url.constant.ts","helpers/http.module.ts","components/companies/CompaniesGrid.component.tsx","pages/companies/Companies.page.tsx"],"sourcesContent":["export const baseUrl = \"https://localhost:7029/api/\";","import axios from \"axios\";\r\nimport { baseUrl } from \"../constants/url.constant\";\r\n\r\nconst httpModule = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\nexport default httpModule;\r\n","import { Box } from \"@mui/material\";\r\nimport \"./companies-grid.scss\";\r\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\r\nimport moment from \"moment\";\r\nimport { ICompany } from \"../../types/global.typing\";\r\n\r\nconst column: GridColDef[] = [\r\n  { field: \"id\", headerName: \"ID\", width: 100 },\r\n  { field: \"name\", headerName: \"Name\", width: 200 },\r\n  { field: \"size\", headerName: \"Size\", width: 150 },\r\n  {\r\n    field: \"createdAt\",\r\n    headerName: \"Cration Time\",\r\n    width: 200,\r\n    renderCell: (params) => moment(params.row.createdAt).format(\"YYYY-MM-DD\"),\r\n  },\r\n];\r\n\r\ninterface ICompaniesGridProps {\r\n  data: ICompany[];\r\n}\r\n\r\nconst CompaniesGrid = ({ data }: ICompaniesGridProps) => {\r\n  return (\r\n    <Box className=\"companies-grid\">\r\n      <DataGrid\r\n        rows={data}\r\n        columns={column}\r\n        getRowId={(row) => row.id}\r\n        rowHeight={50}\r\n      ></DataGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CompaniesGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./companies.scss\";\r\nimport httpModule from \"../../helpers/http.module\";\r\nimport { ICompany } from \"../../types/global.typing\";\r\nimport { error } from \"console\";\r\nimport { Button, CircularProgress } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport CompaniesGrid from \"../../components/companies/CompaniesGrid.component\";\r\n\r\nconst Companies = () => {\r\n  const [companies, setCompanies] = useState<ICompany[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const redirect = useNavigate();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    httpModule\r\n      .get<ICompany[]>(\"/Company/Get\")\r\n      .then((reponse) => {\r\n        setCompanies(reponse.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error\");\r\n        console.log(error);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n    // console.log(companies);\r\n  return (\r\n    <div className=\"content companies\">\r\n      <div className=\"heading\">\r\n        <h2>Companies</h2>\r\n        <Button variant=\"outlined\" onClick={() => redirect(\"/companies/add\")}>\r\n          <Add />\r\n        </Button>\r\n      </div>\r\n      {loading ? (\r\n        <CircularProgress size={100} />\r\n      ) : companies.length === 0 ? (\r\n        <h1>No Company</h1>\r\n      ) : (\r\n        <CompaniesGrid data={companies} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n"],"names":["axios","create","baseURL","column","field","headerName","width","renderCell","params","moment","row","createdAt","format","_ref","data","_jsx","Box","className","children","DataGrid","rows","columns","getRowId","id","rowHeight","Companies","companies","setCompanies","useState","loading","setLoading","redirect","useNavigate","useEffect","httpModule","get","then","reponse","catch","error","alert","console","log","_jsxs","Button","variant","onClick","Add","CircularProgress","size","length","CompaniesGrid"],"sourceRoot":""}